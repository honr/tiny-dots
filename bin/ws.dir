#!/bin/zsh

# Find the value corresponding to given keys in a string->string table or return
# an empty string and a non-zero exit value.  Lines in file should look like:
# KEY VALUE
# ANOTHER-KEY ITS VALUE
# The first space is the delimeter.
# The first argument is the file, and the rest are keys.  When multiple keys are
# provided, The first successful lookup inhibits looking for subsequent keys.
function lookup_in_string_table() {
  local file="$1"
  [[ -e "$file" ]] || return 1
  shift 1
  # The rest of args are keys.
  local key
  local line
  local value
  local matched
  for key; do
    grep -e "^$key " "$file" | while read line ; do
      value="${line/#$key /}"
      echo "${(e)value}"
      matched=yes
    done
    if [[ -n "$matched" ]] ; then
      break
    fi
  done
}

# Convenience command for tmux project management.
# When creating a session, the initial directory is looked up in ~/.tmux/DIRS.
# Then the project-specific script at ~/.tmux/$STY is sourced if existing.
function main() {
  if [[ -z "$1" ]] ; then
    return
  fi
  local STY="$1"
  local other_key
  case "$STY" in
    [A-Z]*) other_key=.upper ;;
    [a-z]*) other_key=.lower ;;
    [0-9]*) other_key=.num ;;
  esac
  lookup_in_string_table "$HOME/.tmux/DIRS" "$STY" "$other_key" ".default" | \
      head -n 1
}

main "$@"
